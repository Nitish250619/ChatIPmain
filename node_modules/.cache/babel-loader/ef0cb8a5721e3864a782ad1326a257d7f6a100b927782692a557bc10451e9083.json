{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/OneChat/src/Components/Conversation/ChatInterface/ChatInput/ChatEmoji/ChatEmoji.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nimport { ReactComponent as EmojiIcon } from \"../../../../../Assets/emoji_icon.svg\";\nimport styles from \"./ChatEmoji.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatEmoji() {\n  _s();\n  const [showPicker, setShowPicker] = useState(false);\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const handleEmojiSelect = emoji => {\n    setChosenEmoji(emoji);\n    // You can handle the selected emoji here, for example, add it to your message input\n    console.log(\"Selected emoji:\", emoji);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"40px\",\n        cursor: \"pointer\"\n      },\n      onClick: () => setShowPicker(!showPicker),\n      children: /*#__PURE__*/_jsxDEV(EmojiIcon, {\n        className: styles.chatemoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), showPicker && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"absolute\",\n        bottom: \"50px\",\n        // Adjust as needed\n        left: \"0\",\n        zIndex: \"100\" // Ensure the picker appears above other content\n      },\n      children: /*#__PURE__*/_jsxDEV(Picker, {\n        data: data,\n        onEmojiSelect: handleEmojiSelect,\n        showPreview: false // Disable emoji preview\n        ,\n        showSkinTones: false // Disable skin tone selector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatEmoji, \"mnDkp9PwQw5Ozc7oVwcw5+TEZ3A=\");\n_c = ChatEmoji;\nexport default ChatEmoji;\nvar _c;\n$RefreshReg$(_c, \"ChatEmoji\");","map":{"version":3,"names":["React","useState","Box","data","Picker","ReactComponent","EmojiIcon","styles","jsxDEV","_jsxDEV","ChatEmoji","_s","showPicker","setShowPicker","chosenEmoji","setChosenEmoji","handleEmojiSelect","emoji","console","log","sx","position","children","display","justifyContent","alignItems","height","cursor","onClick","className","chatemoji","fileName","_jsxFileName","lineNumber","columnNumber","bottom","left","zIndex","onEmojiSelect","showPreview","showSkinTones","_c","$RefreshReg$"],"sources":["/Users/a1/Desktop/OneChat/src/Components/Conversation/ChatInterface/ChatInput/ChatEmoji/ChatEmoji.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport data from \"@emoji-mart/data\";\nimport Picker from \"@emoji-mart/react\";\nimport { ReactComponent as EmojiIcon } from \"../../../../../Assets/emoji_icon.svg\";\nimport styles from \"./ChatEmoji.module.css\";\n\nfunction ChatEmoji() {\n  const [showPicker, setShowPicker] = useState(false);\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n\n  const handleEmojiSelect = (emoji) => {\n    setChosenEmoji(emoji);\n    // You can handle the selected emoji here, for example, add it to your message input\n    console.log(\"Selected emoji:\", emoji);\n  };\n\n  return (\n    <Box\n      sx={{\n        position: \"relative\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"40px\",\n          cursor: \"pointer\",\n        }}\n        onClick={() => setShowPicker(!showPicker)}\n      >\n        <EmojiIcon className={styles.chatemoji} />\n      </Box>\n      {showPicker && (\n        <Box\n          sx={{\n            position: \"absolute\",\n            bottom: \"50px\", // Adjust as needed\n            left: \"0\",\n            zIndex: \"100\", // Ensure the picker appears above other content\n          }}\n        >\n          <Picker\n            data={data}\n            onEmojiSelect={handleEmojiSelect}\n            showPreview={false} // Disable emoji preview\n            showSkinTones={false} // Disable skin tone selector\n          />\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default ChatEmoji;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,cAAc,IAAIC,SAAS,QAAQ,sCAAsC;AAClF,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMe,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,cAAc,CAACE,KAAK,CAAC;IACrB;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;EACvC,CAAC;EAED,oBACER,OAAA,CAACP,GAAG;IACFkB,EAAE,EAAE;MACFC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,gBAEFb,OAAA,CAACP,GAAG;MACFkB,EAAE,EAAE;QACFG,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE;MACV,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAMf,aAAa,CAAC,CAACD,UAAU,CAAE;MAAAU,QAAA,eAE1Cb,OAAA,CAACH,SAAS;QAACuB,SAAS,EAAEtB,MAAM,CAACuB;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACLtB,UAAU,iBACTH,OAAA,CAACP,GAAG;MACFkB,EAAE,EAAE;QACFC,QAAQ,EAAE,UAAU;QACpBc,MAAM,EAAE,MAAM;QAAE;QAChBC,IAAI,EAAE,GAAG;QACTC,MAAM,EAAE,KAAK,CAAE;MACjB,CAAE;MAAAf,QAAA,eAEFb,OAAA,CAACL,MAAM;QACLD,IAAI,EAAEA,IAAK;QACXmC,aAAa,EAAEtB,iBAAkB;QACjCuB,WAAW,EAAE,KAAM,CAAC;QAAA;QACpBC,aAAa,EAAE,KAAM,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CA/CQD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAiDlB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}